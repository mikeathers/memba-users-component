<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="af0810bc-d005-4e68-b848-afbf6c3ffad4" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/api/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/event-bridge/create-account.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/event-bridge/handle-event-bridge.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/event-bridge/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test-support/mocks/event-bridge-event.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/functions/create-account.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/api/create-account.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/functions/delete-account.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/api/delete-account.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/functions/get-account-by-id.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/api/get-account-by-id.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/functions/get-all-accounts.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/api/get-all-accounts.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/functions/handle-api-request.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/api/handle-api-request.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/functions/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/handlers/accounts/functions/update-account.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/handlers/accounts/functions/api/update-account.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test-support/mocks/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/test-support/mocks/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.tsbuildinfo" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.tsbuildinfo" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2QxTLcWO0gYnUhjTk73tmALYMOj" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/Users/michaelatherton/Development/memba/memba-users-component/src/handlers/accounts/functions/event-bridge",
    "nodejs.jest.jest_package": "/Users/michaelatherton/Development/memba/memba-users-component/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/michaelatherton/Development/memba/memba-users-component/node_modules/prettier",
    "settings.editor.selected.configurable": "settings.javascript.prettier",
    "ts.external.directory.path": "/Users/michaelatherton/Development/memba/memba-users-component/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/handlers/accounts/functions/event-bridge" />
      <recent name="$PROJECT_DIR$/src/" />
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/src/aws" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/handlers/accounts/functions/api" />
      <recent name="$PROJECT_DIR$/src/handlers/accounts" />
      <recent name="$PROJECT_DIR$/src/handlers" />
      <recent name="$PROJECT_DIR$/src" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.Account handler.Handler.EventBridge Event.should call db put with account details">
    <configuration name="Account handler.Handler" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.test.ts" />
      <test-names>
        <test-name value="Account handler" />
        <test-name value="Handler" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Account handler.Handler.EventBridge Event.should call db put with account details" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.test.ts" />
      <test-names>
        <test-name value="Account handler" />
        <test-name value="Handler" />
        <test-name value="EventBridge Event" />
        <test-name value="should call db put with account details" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Account handler.Handler.EventBridge Event.should call publishCreateAccountLogEvent if event created successfully" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.test.ts" />
      <test-names>
        <test-name value="Account handler" />
        <test-name value="Handler" />
        <test-name value="EventBridge Event" />
        <test-name value="should call publishCreateAccountLogEvent if event created successfully" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Account handler.Handler.EventBridge Event.should throw an error if account already exists" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.test.ts" />
      <test-names>
        <test-name value="Account handler" />
        <test-name value="Handler" />
        <test-name value="EventBridge Event" />
        <test-name value="should throw an error if account already exists" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Account handler.Handler.EventBridge Event.should throw an error if event has no details" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/handlers/accounts/accounts.handler.test.ts" />
      <test-names>
        <test-name value="Account handler" />
        <test-name value="Handler" />
        <test-name value="EventBridge Event" />
        <test-name value="should throw an error if event has no details" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.Account handler.Handler.EventBridge Event.should call db put with account details" />
        <item itemvalue="Jest.Account handler.Handler.EventBridge Event.should throw an error if event has no details" />
        <item itemvalue="Jest.Account handler.Handler.EventBridge Event.should throw an error if account already exists" />
        <item itemvalue="Jest.Account handler.Handler" />
        <item itemvalue="Jest.Account handler.Handler.EventBridge Event.should call publishCreateAccountLogEvent if event created successfully" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="af0810bc-d005-4e68-b848-afbf6c3ffad4" name="Changes" comment="" />
      <created>1686294178024</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1686294178024</updated>
      <workItem from="1686294179411" duration="13326000" />
      <workItem from="1686411770842" duration="35271000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/handlers/accounts/functions/api/create-account.ts</url>
          <line>26</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/handlers/accounts/functions/api/create-account.ts</url>
          <line>37</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/handlers/accounts/functions/api/create-account.ts</url>
          <line>35</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>